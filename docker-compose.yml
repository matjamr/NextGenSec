version: '3.8'
services:
#  service-orchestrator:
#    image: service-orchestrator
#    build:
#      context: ./
#      dockerfile: Dockerfile
#      args:
#        API_SOURCE_DIR: api
#        APP_SOURCE_DIR: service-orchestrator
#    ports:
#      - "8080:8080"
#    depends_on:
#      - db
#      - zookeeper
#      - kafka
#    env_file:
#      - envs/service-orchestration.env
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data

volumes:
  db:
    driver: local
  cache:
    driver: local
