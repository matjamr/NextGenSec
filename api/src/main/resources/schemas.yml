openapi: 3.0.3
info:
  title: Cosmo page backend
  description: |-
    A simple banking API that allows two operations:
    - get account balance given account number
    - deposit amount to a account
  version: 1.0-SNAPSHOT
servers:
  - url: http://localhost:808/api
tags:
  - name: images
    description: images operations

  - name: admin restricted
    description: admin restricted operations

  - name: permit all
    description: operations that are open to all

  - name: user
    description: user operations

paths:
  /sample:
    get:
      tags:
        - admin restricted
      summary: Summary template
      description: Description template
      operationId: operationId
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressModel"

components:
  schemas:
    # external
    UserModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        surname:
          type: string
        password:
          type: string
        passwordChange:
          type: boolean
        phoneNumber:
          type: string
        email:
          type: string
        source:
          $ref: '#/components/schemas/RegistrationSource'
        address:
          $ref: '#/components/schemas/AddressModel'
        role:
          $ref: '#/components/schemas/Role'
        ownerShipPlace:
          $ref: '#/components/schemas/PlacesModel'
        userPlaceAssignments:
          type: array
          items:
            $ref: '#/components/schemas/UserPlaceAssignment'

    Role:
      type: string
      enum: [ "user", "admin", "system", "robotic" ]
      x-enum-varnames: [ USER, ADMIN, SYSTEM, ROBOTIC ]
    RegistrationSource:
      type: string
      enum: [ "JWT", "GOOGLE", "FACEBOOK"]
      x-enum-varnames: [ JWT, GOOGLE, FACEBOOK ]
    AddressModel:
      type: object
      properties:
        id:
          type: string
        homeNumber:
          type: string
        streetName:
          type: string
        postalCode:
          type: string
        city:
          type: string
        latitude:
          type: number
        longitude:
          type: number
    PostModel:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        imageIds:
          type: array
          items:
            type: string
    GoogleAuthorizedUser:
      type: object
      properties:
        email:
          type: string
        given_name:
          type: string
        family_name:
          type: string
        picture:
          type: string
        source:
          $ref: '#/components/schemas/RegistrationSource'
        password:
          type: string
    FacebookUserResponse:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        name:
          type: string
    OutboundEmailModel:
      type: object
      properties:
        strategy:
          type: string
        subject:
          type: string
        email:
          type: string
        params:
          type: string
          additionalProperties:
            type: string
    ProductModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        monthlyPrice:
          type: number
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageModel'
    ImageModel:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
    ImageUploadAssoc:
      type: object
      properties:
        name:
          type: string
        isSensitive:
          type: boolean
    PlacesModel:
      type: object
      properties:
        id:
          type: string
        owner:
          $ref: '#/components/schemas/UserModel'
        emailPlace:
          type: string
        image:
          $ref: '#/components/schemas/ImageModel'
        placeName:
          type: string
        address:
          $ref: '#/components/schemas/AddressModel'
        authorizedUsers:
          type: array
          items:
            $ref: '#/components/schemas/UserPlaceAssignment'
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceModel'
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductModel'
        description:
          type: string
    DeviceModel:
      type: object
      properties:
        id:
          type: string
        deviceName:
          type: string
        place:
          $ref: '#/components/schemas/PlacesModel'
        product:
          $ref: '#/components/schemas/ProductModel'
        installmentTime:
          type: string
          format: date-time
    SensitiveDataModel:
        type: object
        properties:
            id:
              type: string
            user:
              $ref: '#/components/schemas/UserModel'
            product:
              $ref: '#/components/schemas/ProductModel'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageModel'
            state:
              type: string
    UserPlaceAssignment:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/UserModel'
        assignmentRole:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductModel'
    NotificationModel:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        user:
          $ref: '#/components/schemas/UserModel'
        date:
          type: string
          format: date-time
    NewsModel:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageModel'
        lastUpdate:
          type: string
          format: date-time

    HistoryEntranceModel:
      type: object
      properties:
        id:
          type: string
        places:
          $ref: '#/components/schemas/PlacesModel'
        user:
          $ref: '#/components/schemas/UserModel'
        product:
          $ref: '#/components/schemas/ProductModel'
        date:
          type: string
          format: date-time

    KafkaNotifModel:
      type: object
      properties:
        email:
          type: string
        place_id:
          type: string
        user_id:
          type: string
        assignment_role:
          type: string
        device_id:
          type: string

    KafkaAsyncHistoryNotif:
      type: object
      properties:
        adminsEmails:
          type: array
          items:
            type: string
        user:
          $ref: '#/components/schemas/UserModel'
        product:
          $ref: '#/components/schemas/ProductModel'

    Token:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        internal_token:
          type: string

    ModifyUserToPlaceModel:
      type: object
      properties:
        placeName:
          type: string
        userPlaceAssignment:
          $ref: '#/components/schemas/UserPlaceAssignment'

    NominatimPlace:
      type: object
      properties:
        place_id:
          type: integer
        licence:
          type: string
        osm_type:
          type: string
        osm_id:
          type: string
        lat:
          type: number
        lon:
          type: number
        class:
          type: string
        type:
          type: string
        place_rank:
          type: integer
        importance:
          type: number
          format: double
        addresstype:
          type: string
        name:
          type: string
        display_name:
          type: string
        boundingbox:
          type: array
          items:
            type: string
    MailModel:
      type: object
      properties:
        subject:
          type: string
        content:
          type: string
        to:
          type: array
          items:
              type: string

    MailRetrieveResponse:
      type:
        object
      properties:
        id:
          type: string
        subject:
          type: string
        content:
          type: string
        from:
          $ref: '#/components/schemas/UserModel'
        toUser:
          $ref: '#/components/schemas/UserModel'
        date:
          type: string
          format: date-time
          pattern: "yyy-MM-dd'T'HH:mm:ss.SSSXXX"

    ModifyProductsPlaceModel:
      type: object
      properties:
        placeName:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductModel'

    KafkaChatServiceModel:
      type: object
      properties:
        adminsEmails:
          type: array
          items:
            type: string
        commonRecipients:
          type: array
          items:
            type: string
        userEmail:
          type: string
        id:
          type: string
        name:
          type: string
        surname:
          type: string
        method:
          type: string
        message:
          type: string
        topic:
          $ref: '#/components/schemas/Topic'

    Topic:
      type: string
      enum:
        - "/topic/admin/entrances"
        - "/topic/broadcast"
        - "/topic/notification"
